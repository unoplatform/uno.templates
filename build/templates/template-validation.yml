parameters:
- name: templateName
  type: string
  default: ''
- name: arguments
  type: string
  default: ''
- name: unocheckArguments
  type: string
  default: ''

steps:
- template: dotnet-install-windows.yml
  parameters:
    DotNetVersion: $(ValidationDotNetVersion)

- task: DownloadBuildArtifacts@0
  inputs:
    artifactName: $(Build.DefinitionName)

- script: |
      echo $JAVA_HOME
  displayName: Check Java Home

- script: |
      md $(Build.SourcesDirectory)\src\PackageCache
      copy "$(System.ArtifactsDirectory)\$(Build.DefinitionName)\*.nupkg" $(Build.SourcesDirectory)\src\PackageCache
  displayName: Copy Artifacts to PackageCache

- script: dotnet new install "$(System.ArtifactsDirectory)\$(Build.DefinitionName)\Uno.Templates*.nupkg"
  displayName: Install Project Templates

- powershell: |
      dotnet nuget add source -n nuget_local $(Build.SourcesDirectory)\src\PackageCache
      dotnet nuget add source -n uno_dev "https://pkgs.dev.azure.com/uno-platform/1dd81cbd-cb35-41de-a570-b0df3571a196/_packaging/unoplatformdev/nuget/v3/index.json"
      dotnet nuget add source -n net8 "https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet8/nuget/v3/index.json"
      Set-PSDebug -Trace 1
      $ErrorActionPreference = 'Stop'

      # Create app with defaults
      dotnet new ${{ parameters.templateName }} -d -v diagnostic -o UnoTemplateValidation1 ${{ parameters.arguments }}
      if ($LASTEXITCODE -ne 0)
      {
          throw "Exit code must be zero."
      }

  displayName: Create template app

- template: canary-updater.yml
  parameters:
    MergeBranch: false

- powershell: |
    & dotnet tool install --global Uno.Check --version $env:ValidationUnoCheckVersion
    cd UnoTemplateValidation1
    uno-check -v --ci --non-interactive --fix --skip xcode --skip gtk3 --skip vswin --skip androidemulator --skip androidsdk --skip vsmac --skip dotnetnewunotemplates ${{ parameters.unocheckArguments }}
  displayName: Uno Check
  env:
    ValidationUnoCheckVersion: $(ValidationUnoCheckVersion)

- powershell: |
      Set-PSDebug -Trace 1
      $ErrorActionPreference = 'Stop'

      cd UnoTemplateValidation1

      if ('${{ parameters.templateName }}' -eq 'unoapp-uwp')
      {
          $msbuild = vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
          & $msbuild /r "/bl:$(build.artifactstagingdirectory)\$(Agent.JobName).binlog"
      }
      else
      {
          & dotnet build "/bl:$(build.artifactstagingdirectory)\$(Agent.JobName).binlog"
      }
      
      if ($LASTEXITCODE -ne 0)
      {
          throw "Exit code must be zero."
      }

  displayName: Build template app
