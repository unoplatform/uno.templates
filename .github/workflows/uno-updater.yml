name: Update Uno Sdk

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to update'
        required: true
        default: 'main'
  
concurrency:
  group: ${{github.workflow}} - ${{github.ref}}
  cancel-in-progress: true

jobs:
  manifest-update:
    runs-on: windows-latest
    strategy:
      matrix:
        branch:
          - main
          - release/stable/5.6

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ matrix.branch }}
        fetch-depth: 0

    - name: "Sdk Update"
      uses: ./.github/actions/sdk-update
      with:
        branch: ${{ matrix.branch }}

    - name: Set target branch
      id: targetbranch
      run: |
        if [[ "${{ matrix.branch }}" == "main" ]]; then
          echo "targetbranch=sdk/update/dev" >> $GITHUB_OUTPUT
        else
          versionNumber=$(echo "${{ matrix.branch }}" | cut -d'/' -f 3)
          echo "targetbranch=sdk/update/release/$versionNumber" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@6d6857d36972b65feb161a90e484f2984215f83e # v6.0.5
      with:
        token: ${{ secrets.PR_TOKEN }}
        base: ${{ matrix.branch }}
        branch: ${{ steps.targetbranch.outputs.targetbranch }}
        commit-message: 'chore: Update Uno.Sdk'
        title: Uno.Sdk Update - ${{ matrix.branch }}
        body: |
          This updates the Uno.Sdk to the latest available version. 
        labels: sdk-update
        draft: false

    - name: Enable Pull Request Automerge
      if: steps.cpr.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@a660677d5469627102a1c1e11409dd063606628d # v3.0.0
      with:
        token: ${{ secrets.PR_TOKEN }}
        pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}

    #- name: Auto approve
    #  if: steps.cpr.outputs.pull-request-operation == 'created'
    #  run: gh pr review --approve "${{ steps.cpr.outputs.pull-request-number }}"
    #  env:
    #    GH_TOKEN: ${{ secrets.PR_TOKEN }}
