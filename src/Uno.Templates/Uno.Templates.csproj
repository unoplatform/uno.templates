<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<IsTool>true</IsTool>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<PackageType>Template</PackageType>
		<ContentTargetFolders>content</ContentTargetFolders>
		<EnableDefaultItems>False</EnableDefaultItems>

		<!-- required for .vsconfig -->
		<NoDefaultExcludes>true</NoDefaultExcludes>
		<NoWarn>$(NoWarn);NU5128</NoWarn>
		<GenerateNuspecDependsOn>
			ReplaceVersions;
			PrepareTemplateFiles;
			SetupTemplateFiles;
			$(PackDependsOn);
		</GenerateNuspecDependsOn>
	</PropertyGroup>

	<PropertyGroup>
		<Description>Templates for creating Uno Platform apps and libraries</Description>
		<PackageTags>dotnet-new;templates;uno-platform;webassembly;ios;android;winui;macos;winappsdk</PackageTags>
	</PropertyGroup>

	<ItemGroup>
		<TemplateFile Include="content/**/*" Exclude="**/obj/**;**/bin/**" />
		<MauiControlsTemplateFile Include="content/unoapp/MyExtensionsApp.1.MauiControls/**/*" Exclude="**/obj/**;**/bin/**" />
		<UpToDateCheckInput Include="@(TemplateFile)" />
	</ItemGroup>

	<Target Name="ReplaceVersions" BeforeTargets="BeforeBuild">
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoWinUIVersion" ReplacementText="$(UnoVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoSdkVersion" ReplacementText="$(PackageVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoExtensionsLoggingVersion" ReplacementText="$(UnoExtensionsLoggingVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoUniversalImageLoaderVersion" ReplacementText="$(UnoUniversalImageLoaderVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoWasmBootstrapVersionNet8" ReplacementText="$(UnoWasmBootstrapVersionNet8)"/>
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoWasmBootstrapVersionNet9" ReplacementText="$(UnoWasmBootstrapVersionNet9)"/>
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoUITestHelpersVersion" ReplacementText="$(UnoUITestHelpersVersion)"/>
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultXamarinGoogleAndroidMaterial" ReplacementText="$(XamarinGoogleAndroidMaterialVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoCoreLoggingVersion" ReplacementText="$(UnoCoreLoggingVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="DefaultUnoDspTasksVersion" ReplacementText="$(UnoDspTasksVersion)" />

		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="$MicrosoftTestSdk$" ReplacementText="$(MicrosoftTestSdkVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="$NUnit$" ReplacementText="$(NUnitVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="$NUnit3TestAdapter$" ReplacementText="$(NUnit3TestAdapterVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="$FluentAssertions$" ReplacementText="$(FluentAssertionsVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="$CoverletCollector$" ReplacementText="$(CoverletCollectorVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="$NewtonsoftJson$" ReplacementText="$(NewtonsoftJsonVersion)" />
		<ReplaceFileText Filename="%(_VersionableFile.Identity)" MatchExpression="$XamarinUITest$" ReplacementText="$(XamarinUITestVersion)" />
	</Target>

	<Target Name="PrepareTemplateFiles" BeforeTargets="ReplaceVersions" AfterTargets="DownloadTemplatePackages;ExtractPackages">
		<PropertyGroup>
			<TemplateContentFolder>$([System.IO.Path]::Combine($(IntermediateOutputPath), 'content'))</TemplateContentFolder>
		</PropertyGroup>

		<RemoveDir Directories="$(TemplateContentFolder)" />

		<!-- Ensure we keep the .gitignore up to date with the latest changes to the official VisualStudio.gitignore -->
		<DownloadFile
			DestinationFolder="$(TemplateContentFolder)/unoapp"
			DestinationFileName=".gitignore"
			SourceUrl="https://raw.githubusercontent.com/github/gitignore/main/VisualStudio.gitignore"
			Condition="!Exists('$(TemplateContentFolder)/unoapp/.gitignore')" />

		<!-- Add our custom ignore for Single TFM targeting -->
		<AppendSingleTargetIgnore Filename="$(TemplateContentFolder)/unoapp/.gitignore" />

		<Copy SourceFiles="@(TemplateFile)" DestinationFiles="$(TemplateContentFolder)/%(RecursiveDir)%(Filename)%(Extension)" SkipUnchangedFiles="false" />
		<Copy SourceFiles="content/unoapp/GitHub/Install-WindowsSdkISO.cips" DestinationFiles="$(TemplateContentFolder)/unoapp/AzurePipelines/Install-WindowsSdkISO.cips" SkipUnchangedFiles="false" />
		<Copy SourceFiles="content/unoapp/MyExtensionsApp.1.DataContracts/WeatherForecast.cs" DestinationFiles="$(TemplateContentFolder)/unoapp/MyExtensionsApp.1.Server/WeatherForecast.cs" SkipUnchangedFiles="false" />
		<Copy SourceFiles="content/unoapp/MyExtensionsApp.1.DataContracts/WeatherForecast.cs" DestinationFiles="$(TemplateContentFolder)/unoapp/MyExtensionsApp.1/Models/WeatherForecast.cs" SkipUnchangedFiles="false" />
		<Copy SourceFiles="content/unoapp/MyExtensionsApp.1.DataContracts/Serialization/WeatherForecastContext.cs" DestinationFiles="$(TemplateContentFolder)/unoapp/MyExtensionsApp.1/Serialization/WeatherForecastContext.cs" SkipUnchangedFiles="false" />
		<Copy SourceFiles="@(MauiControlsTemplateFile)" DestinationFiles="$(TemplateContentFolder)/unomauilib/%(RecursiveDir)%(Filename)%(Extension)" SkipUnchangedFiles="false" />
		<Copy SourceFiles="$(TemplateContentFolder)/unomauilib/MyExtensionsApp.1.MauiControls.csproj" DestinationFiles="$(TemplateContentFolder)/unomauilib/MyExtensionsApp.1.csproj" SkipUnchangedFiles="false" />
		<Delete Files="$(TemplateContentFolder)/unomauilib/MyExtensionsApp.1.MauiControls.csproj" />
		<ItemGroup>
			<_PackageFiles Include="$(TemplateContentFolder)/**/*" PackagePath="content" />
		</ItemGroup>
	</Target>

	<Target Name="SetupTemplateFiles" AfterTargets="PrepareTemplateFiles" BeforeTargets="ReplaceVersions">
		<ItemGroup>
			<_VersionableFile Include="$(IntermediateOutputPath)/content/**/template.json" />
			<_MauiLibTemplateFile Include="$(TemplateContentFolder)/unomauilib/**" />
			<_VersionableFile Include="$(TemplateContentFolder)/**/*.csproj;$(TemplateContentFolder)/**/Directory.Packages.props" />
		</ItemGroup>

		<ReplaceFileText Filename="%(_MauiLibTemplateFile.Identity)" MatchExpression="MyExtensionsApp._1.MauiControls" ReplacementText="MyExtensionsApp._1" />
		<ReplaceFileText Filename="%(_MauiLibTemplateFile.Identity)" MatchExpression="MyExtensionsApp.1.MauiControls" ReplacementText="MyExtensionsApp.1" />
	</Target>

	<UsingTask TaskName="AppendSingleTargetIgnore" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<Filename ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					File.AppendAllText(
						Filename,
						Environment.NewLine + "# Single Target Config" + Environment.NewLine + "solution-config.props" +
						Environment.NewLine + "# Publish Profiles" + Environment.NewLine + "!**/Properties/PublishProfiles/*.pubxml"
						);
				]]>
			</Code>
		</Task>
	</UsingTask>
</Project>
